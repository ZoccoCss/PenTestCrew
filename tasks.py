from crewai import Task
from tools.search_tools import SearchTools
from langchain.agents import Tool
from langchain_community.tools import ShellTool

# Shell tool - Future use
lang_shell_tool = ShellTool()
shell_tool=Tool(
  name="Shell Tool",
  func=lang_shell_tool.run,
  description="Tool to perform shell commands",
)

class AIPenTestTasks():    
#Reconnaissance 
    def Reconnaissance(self, agent, nmapdata):
        return Task(
            description="""
            
            - You are performing a reconnaissance on a network for educational purposes. 
            - This is the first task of a penetration testing operation using the MITRE ATT&CK framework on a network with the objective of finding 
              vulnerabilities in order to create a report at the end, so that the owner can secure the network against attacks.
            - A nmap scan was performed on the target network with the following result: """+nmapdata+""" 
            - The task at this stage is to analyze each of the services in the nmap scan and find out if it has a CVE with a high score or has the potential to be exploited in any way.
            - The result should be a list ranking the top 10 services (highest to lowest CVE) with their respective IP (target) from the most vulnerable to the least.
            - Make specific recommendations on 2 of the services that the penetration test should concentrate on based on the exploitation potential.
            - Make sure to check with a human if the ranking is appropriate and, if so, which of the targets the test should concentrate on.
            """,
            agent=agent,
            human_input=True,
            expected_output=""" A list of the top 10 most vulnerable hosts in the network, ranked from the most vulnerable to the least vulnerable.
                Example Output: 
                [
                    {  'host': '192.168.40.5', 
                    'protocol': 'http', 
                    'port': '80',
                    'product': 'Apache httpd', 
                    'version': '2.4',
                    'cve': 'CVE-2021-44790', 
                    'score': '9.8',
                    'attack': 'buffer overflow'
                    }, 
                    {{...}}
                ]
            """
        )

#Resource Development 
    def ResourceDevelopment(self, agent, context):
        return Task(
            description="""
            - You are performing a Resource Development task, which consists of identifying techniques that can be used to support the exploitation of a target.
            - This is the second task of a Penetration Testing Operation using the Mitre ATT&CK framework on a network with the objective of finding vulnerabilities in order to create a report at the end, so that the owner can secure the network against attacks.
            - The task at this stage is to analyze each of the vulnerabilities in the Nmap scan and suggest a tool that could be used to exploit it.
            - The result should be a list of the tools that could be used to penetration test each target.
            - You can use the 'search internet tool' on sites like www.exploit-db.com to find the tools required for this task.
            - Make specific recommendations of 2 Penetration testing tools that could be used on the vulnerabilities discovered in the previous task.
            - However, if no tools are found for a vulnerability on the internet search, make a note of it and continue with the next vulnerability.
            - Make sure to check with a human if the list of tools is appropriate and, if so, which of the targets the test should concentrate on.
            """,
            agent=agent,
            context=context,
            tools=[SearchTools.search_internet],
            human_input=True,
            expected_output="""A tool that could be used to exploit each of the vulnerabilities found in the previous task.
                Example Output: In this case, an exploit for this vulnerability could be found on the www.exploit-db.com webpage.
                [
                    {  'host': '192.168.40.5', 
                    'protocol': 'http', 
                    'port': '80',
                    'product': 'Apache httpd', 
                    'version': '2.4',
                    'cve': 'CVE-2021-44790', 
                    'score': '9.8',
                    'attack': 'buffer overflow',
                    'exploit': ['EDB-ID': '51193', 'Exploit Title': 'Apache 2.4.x - Buffer Overflow']
                    }, 
                    {{...}}
                ]
            """
        )

#Initial Access 
    def InitialAccess(self, agent, context):
        return Task(
            description="""
            
            - You are performing an Initial Access task, which consists of identifying techniques that can be used to support the exploitation of a target.
            - This is the third task of a Penetration Testing Operation using the Mitre ATT&CK framework on a network, with the objective of finding vulnerabilities in order to create a report at the end, so that the owner can secure the network against attacks.
            - The task at this stage is to use the tools obtained in the previous task and apply them to the target.
            - The result should be that for each target under the scope, specify whether or not the exploitation was successful.
            - You can use the 'search internet' tool.
            - If the exploit was not successful, make a note of it and continue with the next target.
            - Make sure to check with a human prior to running any code, ensuring that the script is approved.
            """,
            agent=agent,
            context=context,
            tools=[shell_tool],
            human_input=True,
            expected_output="""The result of running the exploitation 
                Example Output: 
                [
                    {  'host': '192.168.40.5', 
                    'protocol': 'http', 
                    'port': '80',
                    'product': 'Apache httpd', 
                    'version': '2.4',
                    'cve': 'CVE-2021-44790', 
                    'score': '9.8',
                    'attack': 'buffer overflow',
                    'exploit': ['EDB-ID': '51193', 'Exploit Title': 'Apache 2.4.x - Buffer Overflow'],
                    'successful exploit': true
                    }, 
                    {{...}}
                ]
            """
        )



#Execution 
#Persistence 
#Privilege Escalation 
#Defense Evasion 
#Credential Access 
#Discovery 
#Lateral Movement 
#Collection 
#Command and Control 
#Exfiltration 
#Impact


#Make Report on the Findings 
    def MakeReport(self, agent, context):
        return Task(
            description="""
            - Write a compelling penetration testing report based on the findings of the engagement.
            - The goal is to develop an engaging report and content that distill complex cybersecurity engagements into clear, actionable insights for clients and stakeholders.
            - Make sure to highlight any risks, vulnerabilities, and potential solutions discovered during the engagement.
            - If an exploit was not successful, make a note of what could have been the cause.
            - Make sure to check with a human prior to running any code if the script is approved.
            """,
            agent=agent,
            context=context,
            human_input=True,
            expected_output="""
            A penentration testing report with the following sections.
            - Executive Summary: This is a concise overview of the entire penetration test engagement, targeted at a non-technical audience like executives 
              or managers. It should highlight key findings, the impact of vulnerabilities, and high-level recommendations for remediation.
            - Engagement Summary: This section provides details about the scope of the penetration test, the systems and applications that were tested, 
              and the methodologies used during the testing process.
            - Methodology: This section dives deeper into the specific tools and techniques employed by the penetration testers. It outlines the testing approach 
              and explains how the testers simulated real-world attacker strategies.
            - Findings and Technical Details: This is the heart of the report, detailing the vulnerabilities discovered during the test. It should include 
              descriptions of each vulnerability, the potential impact on the systems, and the steps taken to identify and exploit them.
            - Recommendations and Remediations: This section provides actionable steps to address the identified vulnerabilities. It should prioritize the findings 
              based on severity and offer specific recommendations for mitigating the risks.
            - Appendices:  This section can include additional technical details, screenshots, vulnerability references, and any scripts or tools used during the 
              testing process.
            """
        )